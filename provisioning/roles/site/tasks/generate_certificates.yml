---
- name: Ensure openssl is installed.
  apt:
    name: openssl

- name: Find path to the OpenSSL binary.
  command: which openssl
  register: dhparam__which_openssl
  changed_when: false

- name: Remember path to OpenSSL binary.
  set_fact:
    dhparam__openssl_binary: "{{ dhparam__which_openssl.stdout }}"

- name: Stat the DHE parameter file.
  stat: path="{{ openssl_dh_param_location }}"
  register: dh_param

- name: Generate DHE parameter file (might take a while).
  command: "'{{ dhparam__openssl_binary }}' dhparam -out '{{ dhparam_path }}' {{ dhparam_size }}"
  when: dh_param.stat.exists == False

- name: Check if certificate already exists
  stat:
    path: /etc/letsencrypt/live/{{ item }}/cert.pem
  register: letsencrypt_certs
  with_items: "{{ certbot_hosts }}"

- name: Check if server is running
  wait_for:
    port: 80
    timeout: 1
  register: port_check
  ignore_errors: yes

- name: Up certbot standalone Apache
  shell: "docker run -d --name apache -v /var/www/html:/usr/local/apache2/htdocs/ -p 80:80 httpd:2.4"
  when: port_check.failed == true

- name: Generate new certificates
  shell: "certbot certonly --noninteractive --agree-tos --email {{ certbot_email }} -d {{ item.item }}"
  with_items: "{{ letsencrypt_certs.results }}"
  when: not item.stat.exists

- name: Down certbot Apache
  shell: "docker rm -f apache"
  when: port_check.failed == true
